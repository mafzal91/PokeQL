
type AbilityEffectChange {
  effect_entries: [Effect],
  version_group:'VersionGroup'
}
type AbilityPokemon {
  is_hidden: Boolean
  slot: Number
  pokemon: Pokemon
}
type Ability {
  pokeapi_id: Number!
  name: String!
  is_main_series: Boolean
  generation:'Generation'
  names:                   [Name],
  effect_entries:          [VerboseEffect],
  effect_changes:          [AbilityEffectChange],
  flavor_text_entries:     [FlavorText1],
  pokemon:                 [AbilityPokemon],
}

type Characteristic {
  pokeapi_id: Number!
  gene_modulo: Boolean
  possible_values: [Number]
  descriptions:[Description],
}

type EggGroup {
  pokeapi_id: Number!
  name: String!
  names:                [Name],
  pokemon_species: [PokemonSpecies]
}

type PokemonSpeciesGender {
  rate: Number!
  pokemon_species: PokemonSpecies"
}
type Gender {
  pokeapi_id: Number!
  name: String!
  pokemon_species_details: [PokemonSpeciesGender],
  required_for_evolution: [PokemonSpecies]
}

type GrowthRateExperienceLevel {
  level: Number
  experience: Number
}
type GrowthRate {
  pokeapi_id: Number!
  name: String!
  formula: String
  descriptions:           [Description],
  levels:                 [GrowthRateExperienceLevel],
  pokemon_species: [PokemonSpecies]
}


type NatureStatChange {
  max_change: Number!
  pokeathlon_stat: PokeathlonStat"
}
type MoveBattleStylePreference {
  low_hp_preference: Number!
  high_hp_preference: Number!
  move_battle_style: MoveBattleStyle
}
type Nature {
  pokeapi_id: Number!
  name: String!
  decreased_stat: Stat"
  increased_stat: Stat"
  hates_flavor: BerryFlavor"
  likes_flavor: BerryFlavor"
  pokeathlon_stat_changes:[NatureStatChange],
  move_battle_style_preferences: [MoveBattleStylePreference],
  names:                  [Name],
}


type NaturePokeathlonStatAffect {
  max_change: Number!
  nature: Nature"
}

type NaturePokeathlonStatAffectSets {
  increase:               [NaturePokeathlonStatAffect],
  decrease:               [NaturePokeathlonStatAffect],
}

type PokeathlonStat {
  pokeapi_id: Number!
  name: String!
  names:                  [Name],
  affecting_natures: NaturePokeathlonStatAffectSets}
}

type PokemonColor {
  pokeapi_id: Number!
  name: String!
  names:                  [Name],
  pokemon_species: [PokemonSpecies]
}

type PokemonFormSprites {
  front_default: String
  front_shiny: String
  back_default: String
  back_shiny: String
}, subSchemaOptions)
type PokemonForm {
  pokeapi_id: Number!
  name: String!
  order: Number
  form_order: Number
  is_default: Boolean
  is_battle_only: Boolean
  is_mega: Boolean
  form_name: String
  pokemon: Pokemon"
  sprites: PokemonFormSprites },
  version_group: VersionGroup"
  names:                  [Name],
  form_names:             [Name],
}, schemaOptions)

type PokemonHabitat {
  pokeapi_id: Number!
  name: String!
  names:                  [Name],
  pokemon_species: [PokemonSpecies]
}

type AwesomeName {
  awesome_name: String!
  language: Language"
}
type PokemonShape {
  pokeapi_id: Number!
  name: String!
  names:                  [Name],
  pokemon_species: [PokemonSpecies]
  awesome_names:          [AwesomeName],
}

type Genus {
  genus: String!
  language: Language"
}
type PokemonSpeciesDexEntry {
  entry_number: Number!
  pokedex: Pokedex"
}
type PalParkEncounterArea {
  base_score: Number!
  rate: Number!
  area: PalParkArea"
}
type PokemonSpeciesVariety {
  is_default: Boolean
  pokemon: Pokemon"
}
type PokemonSpecies {
  pokeapi_id: Number!
  name: String!
  order: Number
  gender_rate: Number
  capture_rate: Number
  base_happiness: Number
  is_baby: Boolean
  hatch_counter: Number
  has_gender_differences: Boolean
  forms_switchable: Boolean
  growth_rate: GrowthRate"
  pokedex_numbers:                [PokemonSpeciesDexEntry],
  egg_groups: [EggGroup]
  color: PokemonColor"
  shape: PokemonShape"
  evolves_from_species: PokemonSpecies"
  evolution_chain: EvolutionChain"
  habitat: PokemonHabitat"
  generation: Generation"
  names:                          [Name],
  pal_park_encounters:            [PalParkEncounterArea],
  flavor_text_entries:            [VersionFlavorText],
  form_descriptions:              [Description],
  genera:                         [Genus],
  varieties:                      [PokemonSpeciesVariety],
}


type MoveStatAffect {
  change: Number!
  move: Move", default: null}
}
type MoveStatAffectSets {
  increase:               [MoveStatAffect],
  decrease:               [MoveStatAffect],
}
type NatureStatAffectSets {
  increase: [Nature]
  decrease: [Nature]
}
type Stat {
  pokeapi_id: Number!
  name: String!
  game_index: String
  is_battle_only: Boolean
  affecting_moves:         MoveStatAffectSets,
  affecting_natures:       NatureStatAffectSets,
  characteristics: [Characteristic]
  move_damage_class: MoveDamageClass"
  names:                   [Name],
}


type TypePokemon {
  slot: Number
  pokemon:'Pokemon'
}
type DamageRelations {
  half_damage_from: [Type]
  no_damage_from: [Type]
  half_damage_to: [Type]
  double_damage_from: [Type]
  no_damage_to: [Type]
  double_damage_to: [Type]
}
type Type {
  pokeapi_id: Number!
  name: String!
  damage_relations:        DamageRelations,
  game_indices:            [GenerationGameIndex],
  generation:"Generation"
  move_damage_class:"MoveDamageClass"
  names:                   [Name],
  pokemon:                 [TypePokemon],
  moves:                   [{ type:'Move', default: null}],
}
